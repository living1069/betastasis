function meta = tampere_pca_clinical(meta)

meta.sample_id = map_sample_ids(meta.sample_id);

% First we check if the sample codes are in the latest format.
% If not, we convert them.
meta = meta_tabular('~/datasets/tampere_pca/tampere_pca_clinical.txt', meta);





function sample_id = map_sample_ids(sample_id)

regexps = { ...
 '8131', 'PCaN_8131'; ...
 '226', 'PCaN_22603'; ...
 '4906', 'PCaN_4906'; ...
 '5934', 'PCaN_5934'; ...
 '9324', 'PCaN_9324'; ...
 '10286', 'PCaN_10286'; ...
 '24173', 'PCaN_24173'; ...
 '4980|PPC_150311_4', 'PCaN_4980'; ...
 '4538', 'PCaN_4538'; ...
 '6102', 'PCaN_6102'; ...
 '12517', 'PCaP_12517'; ...
 '13943', 'PCaP_13943'; ...
 '18307', 'PCaN_18307'; ...
 '20873', 'PCaN_20873'; ...
 '15194|PPC_150311_3', 'PCaP_15194'; ...
 '194', 'PCaP_19403'; ...
 '4786', 'PCaP_4786'; ...
 '6342', 'PCaP_6342'; ...
 '6488', 'PCaN_6488'; ...
 '15420', 'PCaP_15420'; ...
 '15760', 'PCaP_15760'; ...
 '17163', 'PCaP_17163'; ...
 '22392', 'PCaP_22392'; ...
 '470', 'PCaP_470'; ...
 '6174', 'PCaP_6174'; ...
 '7875', 'PCaN_7875'; ...
 '8438', 'PCaP_8438'; ...
 '14670', 'PCaP_14670'; ...
 '6864', 'PCaP_6864'; ...
 '17447', 'PCaP_17447'; ...
 '278[_.]2', 'CRPC_278.2'; ...
 '278', 'CRPC_278'; ...
 '305', 'CRPC_305'; ...
 '348', 'CRPC_348'; ...
 '489[_.]2', 'CRPC_489.2'; ...
 '489', 'CRPC_489'; ...
 '530', 'CRPC_530'; ...
 '531', 'CRPC_531'; ...
 '539', 'CRPC_539'; ...
 '541', 'CRPC_541'; ...
 '542', 'CRPC_542'; ...
 '543[_.]2', 'CRPC_543.2'; ...
 '543', 'CRPC_543'; ...
 '697', 'CRPC_697'; ...
 '261|TURP_150311_7', 'CRPC_261'; ...
 '435|TURP_150311_8', 'CRPC_435'; ...
 '651', 'BPHk_651'; ...
 '659', 'BPHk_659'; ...
 '665', 'BPHk_665'; ...
 '677', 'BPHt_677'; ...
 '689', 'BPHt_689'; ...
 '701', 'BPHn_701'; ...
 '688|PPC_150311_2', 'BPHk_688'; ...
 '656|TURP_150311_5', 'BPHt_656'; ...
 '671|TURP_150311_6', 'BPHt_671'; ...
 '337', 'BPHn_337'; ...
 '456', 'BPHn_456'; ...
 '652|PPC_150311_1', 'BPHk_652' };

for s = 1:length(sample_id)
	id = sample_id{s};
	for r = 1:size(regexps, 1)
		if rx(id, regexps{r, 1})
			sample_id{s} = regexps{r, 2}; break;
		end
	end
end
			
